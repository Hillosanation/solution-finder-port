use crate::common::generator::wrapper::wrapper;

pub fn delete_line(x: u64, mask: u64) -> u64 {
    delete_line_inner(x, wrapper(mask))
}

fn delete_line_inner(x: u64, mask: u64) -> u64 {
    match mask {
        0b1100000000110000000011 => 0,
        0b1100000000110000000010 => x & 0x3ff,
        0b1100000000100000000011 => (x >> 10) & 0x3ff,
        0b1100000000100000000010 => x & 0xfffff,
        0b1000000000110000000011 => (x >> 20) & 0x3ff,
        0b1000000000110000000010 => x & 0x3ff | (x >> 10) & 0xffc00,
        0b1000000000100000000011 => (x >> 10) & 0xfffff,
        0b1000000000100000000010 => x & 0x3fffffff,
        0b1100000000110000000001 => (x >> 30) & 0x3ff,
        0b1100000000110000000000 => x & 0x3ff | (x >> 20) & 0xffc00,
        0b1100000000100000000001 => (x >> 10) & 0x3ff | (x >> 20) & 0xffc00,
        0b1100000000100000000000 => x & 0xfffff | (x >> 10) & 0x3ff00000,
        0b1000000000110000000001 => (x >> 20) & 0xfffff,
        0b1000000000110000000000 => x & 0x3ff | (x >> 10) & 0x3ffffc00,
        0b1000000000100000000001 => (x >> 10) & 0x3fffffff,
        0b1000000000100000000000 => x & 0xffffffffff,
        0b1100000000010000000011 => (x >> 40) & 0x3ff,
        0b1100000000010000000010 => x & 0x3ff | (x >> 30) & 0xffc00,
        0b1100000000000000000011 => (x >> 10) & 0x3ff | (x >> 30) & 0xffc00,
        0b1100000000000000000010 => x & 0xfffff | (x >> 20) & 0x3ff00000,
        0b1000000000010000000011 => (x >> 20) & 0x3ff | (x >> 30) & 0xffc00,
        0b1000000000010000000010 => x & 0x3ff | (x >> 10) & 0xffc00 | (x >> 20) & 0x3ff00000,
        0b1000000000000000000011 => (x >> 10) & 0xfffff | (x >> 20) & 0x3ff00000,
        0b1000000000000000000010 => x & 0x3fffffff | (x >> 10) & 0xffc0000000,
        0b1100000000010000000001 => (x >> 30) & 0xfffff,
        0b1100000000010000000000 => x & 0x3ff | (x >> 20) & 0x3ffffc00,
        0b1100000000000000000001 => (x >> 10) & 0x3ff | (x >> 20) & 0x3ffffc00,
        0b1100000000000000000000 => x & 0xfffff | (x >> 10) & 0xfffff00000,
        0b1000000000010000000001 => (x >> 20) & 0x3fffffff,
        0b1000000000010000000000 => x & 0x3ff | (x >> 10) & 0xfffffffc00,
        0b1000000000000000000001 => (x >> 10) & 0xffffffffff,
        0b1000000000000000000000 => x & 0x3ffffffffffff,
        0b0100000000110000000011 => (x >> 50) & 0x3ff,
        0b0100000000110000000010 => x & 0x3ff | (x >> 40) & 0xffc00,
        0b0100000000100000000011 => (x >> 10) & 0x3ff | (x >> 40) & 0xffc00,
        0b0100000000100000000010 => x & 0xfffff | (x >> 30) & 0x3ff00000,
        0b0000000000110000000011 => (x >> 20) & 0x3ff | (x >> 40) & 0xffc00,
        0b0000000000110000000010 => x & 0x3ff | (x >> 10) & 0xffc00 | (x >> 30) & 0x3ff00000,
        0b0000000000100000000011 => (x >> 10) & 0xfffff | (x >> 30) & 0x3ff00000,
        0b0000000000100000000010 => x & 0x3fffffff | (x >> 20) & 0xffc0000000,
        0b0100000000110000000001 => (x >> 30) & 0x3ff | (x >> 40) & 0xffc00,
        0b0100000000110000000000 => x & 0x3ff | (x >> 20) & 0xffc00 | (x >> 30) & 0x3ff00000,
        0b0100000000100000000001 => {
            (x >> 10) & 0x3ff | (x >> 20) & 0xffc00 | (x >> 30) & 0x3ff00000
        }
        0b0100000000100000000000 => x & 0xfffff | (x >> 10) & 0x3ff00000 | (x >> 20) & 0xffc0000000,
        0b0000000000110000000001 => (x >> 20) & 0xfffff | (x >> 30) & 0x3ff00000,
        0b0000000000110000000000 => x & 0x3ff | (x >> 10) & 0x3ffffc00 | (x >> 20) & 0xffc0000000,
        0b0000000000100000000001 => (x >> 10) & 0x3fffffff | (x >> 20) & 0xffc0000000,
        0b0000000000100000000000 => x & 0xffffffffff | (x >> 10) & 0x3ff0000000000,
        0b0100000000010000000011 => (x >> 40) & 0xfffff,
        0b0100000000010000000010 => x & 0x3ff | (x >> 30) & 0x3ffffc00,
        0b0100000000000000000011 => (x >> 10) & 0x3ff | (x >> 30) & 0x3ffffc00,
        0b0100000000000000000010 => x & 0xfffff | (x >> 20) & 0xfffff00000,
        0b0000000000010000000011 => (x >> 20) & 0x3ff | (x >> 30) & 0x3ffffc00,
        0b0000000000010000000010 => x & 0x3ff | (x >> 10) & 0xffc00 | (x >> 20) & 0xfffff00000,
        0b0000000000000000000011 => (x >> 10) & 0xfffff | (x >> 20) & 0xfffff00000,
        0b0000000000000000000010 => x & 0x3fffffff | (x >> 10) & 0x3ffffc0000000,
        0b0100000000010000000001 => (x >> 30) & 0x3fffffff,
        0b0100000000010000000000 => x & 0x3ff | (x >> 20) & 0xfffffffc00,
        0b0100000000000000000001 => (x >> 10) & 0x3ff | (x >> 20) & 0xfffffffc00,
        0b0100000000000000000000 => x & 0xfffff | (x >> 10) & 0x3fffffff00000,
        0b0000000000010000000001 => (x >> 20) & 0xffffffffff,
        0b0000000000010000000000 => x & 0x3ff | (x >> 10) & 0x3fffffffffc00,
        0b0000000000000000000001 => (x >> 10) & 0x3ffffffffffff,
        0b0000000000000000000000 => x & 0xfffffffffffffff,
        _ => unreachable!(),
    }
}

pub fn insert_filled_row(x: u64, mask: u64) -> u64 {
    insert_filled_row_inner(x, wrapper(mask))
}

fn insert_filled_row_inner(x: u64, mask: u64) -> u64 {
    match mask {
        0b1100000000110000000011 => 0xfffffffffffffff,
        0b1100000000110000000010 => x & 0x3ff | 0xffffffffffffc00,
        0b1100000000100000000011 => (x & 0x3ff) << 10 | 0xffffffffff003ff,
        0b1100000000100000000010 => x & 0xfffff | 0xffffffffff00000,
        0b1000000000110000000011 => (x & 0x3ff) << 20 | 0xfffffffc00fffff,
        0b1000000000110000000010 => x & 0x3ff | (x & 0xffc00) << 10 | 0xfffffffc00ffc00,
        0b1000000000100000000011 => (x & 0xfffff) << 10 | 0xfffffffc00003ff,
        0b1000000000100000000010 => x & 0x3fffffff | 0xfffffffc0000000,
        0b1100000000110000000001 => (x & 0x3ff) << 30 | 0xfffff003fffffff,
        0b1100000000110000000000 => x & 0x3ff | (x & 0xffc00) << 20 | 0xfffff003ffffc00,
        0b1100000000100000000001 => (x & 0x3ff) << 10 | (x & 0xffc00) << 20 | 0xfffff003ff003ff,
        0b1100000000100000000000 => x & 0xfffff | (x & 0x3ff00000) << 10 | 0xfffff003ff00000,
        0b1000000000110000000001 => (x & 0xfffff) << 20 | 0xfffff00000fffff,
        0b1000000000110000000000 => x & 0x3ff | (x & 0x3ffffc00) << 10 | 0xfffff00000ffc00,
        0b1000000000100000000001 => (x & 0x3fffffff) << 10 | 0xfffff00000003ff,
        0b1000000000100000000000 => x & 0xffffffffff | 0xfffff0000000000,
        0b1100000000010000000011 => (x & 0x3ff) << 40 | 0xffc00ffffffffff,
        0b1100000000010000000010 => x & 0x3ff | (x & 0xffc00) << 30 | 0xffc00fffffffc00,
        0b1100000000000000000011 => (x & 0x3ff) << 10 | (x & 0xffc00) << 30 | 0xffc00fffff003ff,
        0b1100000000000000000010 => x & 0xfffff | (x & 0x3ff00000) << 20 | 0xffc00fffff00000,
        0b1000000000010000000011 => (x & 0x3ff) << 20 | (x & 0xffc00) << 30 | 0xffc00ffc00fffff,
        0b1000000000010000000010 => {
            x & 0x3ff | (x & 0xffc00) << 10 | (x & 0x3ff00000) << 20 | 0xffc00ffc00ffc00
        }
        0b1000000000000000000011 => {
            (x & 0xfffff) << 10 | (x & 0x3ff00000) << 20 | 0xffc00ffc00003ff
        }
        0b1000000000000000000010 => x & 0x3fffffff | (x & 0xffc0000000) << 10 | 0xffc00ffc0000000,
        0b1100000000010000000001 => (x & 0xfffff) << 30 | 0xffc00003fffffff,
        0b1100000000010000000000 => x & 0x3ff | (x & 0x3ffffc00) << 20 | 0xffc00003ffffc00,
        0b1100000000000000000001 => (x & 0x3ff) << 10 | (x & 0x3ffffc00) << 20 | 0xffc00003ff003ff,
        0b1100000000000000000000 => x & 0xfffff | (x & 0xfffff00000) << 10 | 0xffc00003ff00000,
        0b1000000000010000000001 => (x & 0x3fffffff) << 20 | 0xffc0000000fffff,
        0b1000000000010000000000 => x & 0x3ff | (x & 0xfffffffc00) << 10 | 0xffc0000000ffc00,
        0b1000000000000000000001 => (x & 0xffffffffff) << 10 | 0xffc0000000003ff,
        0b1000000000000000000000 => x & 0x3ffffffffffff | 0xffc000000000000,
        0b0100000000110000000011 => (x & 0x3ff) << 50 | 0x3ffffffffffff,
        0b0100000000110000000010 => x & 0x3ff | (x & 0xffc00) << 40 | 0x3fffffffffc00,
        0b0100000000100000000011 => (x & 0x3ff) << 10 | (x & 0xffc00) << 40 | 0x3fffffff003ff,
        0b0100000000100000000010 => x & 0xfffff | (x & 0x3ff00000) << 30 | 0x3fffffff00000,
        0b0000000000110000000011 => (x & 0x3ff) << 20 | (x & 0xffc00) << 40 | 0x3ffffc00fffff,
        0b0000000000110000000010 => {
            x & 0x3ff | (x & 0xffc00) << 10 | (x & 0x3ff00000) << 30 | 0x3ffffc00ffc00
        }
        0b0000000000100000000011 => (x & 0xfffff) << 10 | (x & 0x3ff00000) << 30 | 0x3ffffc00003ff,
        0b0000000000100000000010 => x & 0x3fffffff | (x & 0xffc0000000) << 20 | 0x3ffffc0000000,
        0b0100000000110000000001 => (x & 0x3ff) << 30 | (x & 0xffc00) << 40 | 0x3ff003fffffff,
        0b0100000000110000000000 => {
            x & 0x3ff | (x & 0xffc00) << 20 | (x & 0x3ff00000) << 30 | 0x3ff003ffffc00
        }
        0b0100000000100000000001 => {
            (x & 0x3ff) << 10 | (x & 0xffc00) << 20 | (x & 0x3ff00000) << 30 | 0x3ff003ff003ff
        }
        0b0100000000100000000000 => {
            x & 0xfffff | (x & 0x3ff00000) << 10 | (x & 0xffc0000000) << 20 | 0x3ff003ff00000
        }
        0b0000000000110000000001 => (x & 0xfffff) << 20 | (x & 0x3ff00000) << 30 | 0x3ff00000fffff,
        0b0000000000110000000000 => {
            x & 0x3ff | (x & 0x3ffffc00) << 10 | (x & 0xffc0000000) << 20 | 0x3ff00000ffc00
        }
        0b0000000000100000000001 => {
            (x & 0x3fffffff) << 10 | (x & 0xffc0000000) << 20 | 0x3ff00000003ff
        }
        0b0000000000100000000000 => {
            x & 0xffffffffff | (x & 0x3ff0000000000) << 10 | 0x3ff0000000000
        }
        0b0100000000010000000011 => (x & 0xfffff) << 40 | 0xffffffffff,
        0b0100000000010000000010 => x & 0x3ff | (x & 0x3ffffc00) << 30 | 0xfffffffc00,
        0b0100000000000000000011 => (x & 0x3ff) << 10 | (x & 0x3ffffc00) << 30 | 0xfffff003ff,
        0b0100000000000000000010 => x & 0xfffff | (x & 0xfffff00000) << 20 | 0xfffff00000,
        0b0000000000010000000011 => (x & 0x3ff) << 20 | (x & 0x3ffffc00) << 30 | 0xffc00fffff,
        0b0000000000010000000010 => {
            x & 0x3ff | (x & 0xffc00) << 10 | (x & 0xfffff00000) << 20 | 0xffc00ffc00
        }
        0b0000000000000000000011 => (x & 0xfffff) << 10 | (x & 0xfffff00000) << 20 | 0xffc00003ff,
        0b0000000000000000000010 => x & 0x3fffffff | (x & 0x3ffffc0000000) << 10 | 0xffc0000000,
        0b0100000000010000000001 => (x & 0x3fffffff) << 30 | 0x3fffffff,
        0b0100000000010000000000 => x & 0x3ff | (x & 0xfffffffc00) << 20 | 0x3ffffc00,
        0b0100000000000000000001 => (x & 0x3ff) << 10 | (x & 0xfffffffc00) << 20 | 0x3ff003ff,
        0b0100000000000000000000 => x & 0xfffff | (x & 0x3fffffff00000) << 10 | 0x3ff00000,
        0b0000000000010000000001 => (x & 0xffffffffff) << 20 | 0xfffff,
        0b0000000000010000000000 => x & 0x3ff | (x & 0x3fffffffffc00) << 10 | 0xffc00,
        0b0000000000000000000001 => (x & 0x3ffffffffffff) << 10 | 0x3ff,
        0b0000000000000000000000 => x, //& 0xfffffffffffffff | 0x0,
        _ => unreachable!(),
    }
}

pub fn insert_empty_row(x: u64, mask: u64) -> u64 {
    insert_empty_row_inner(x, wrapper(mask))
}

fn insert_empty_row_inner(x: u64, mask: u64) -> u64 {
    match mask {
        0b1100000000110000000011 => 0,
        0b1100000000110000000010 => x & 0x3ff,
        0b1100000000100000000011 => (x & 0x3ff) << 10,
        0b1100000000100000000010 => x & 0xfffff,
        0b1000000000110000000011 => (x & 0x3ff) << 20,
        0b1000000000110000000010 => x & 0x3ff | (x & 0xffc00) << 10,
        0b1000000000100000000011 => (x & 0xfffff) << 10,
        0b1000000000100000000010 => x & 0x3fffffff,
        0b1100000000110000000001 => (x & 0x3ff) << 30,
        0b1100000000110000000000 => x & 0x3ff | (x & 0xffc00) << 20,
        0b1100000000100000000001 => (x & 0x3ff) << 10 | (x & 0xffc00) << 20,
        0b1100000000100000000000 => x & 0xfffff | (x & 0x3ff00000) << 10,
        0b1000000000110000000001 => (x & 0xfffff) << 20,
        0b1000000000110000000000 => x & 0x3ff | (x & 0x3ffffc00) << 10,
        0b1000000000100000000001 => (x & 0x3fffffff) << 10,
        0b1000000000100000000000 => x & 0xffffffffff,
        0b1100000000010000000011 => (x & 0x3ff) << 40,
        0b1100000000010000000010 => x & 0x3ff | (x & 0xffc00) << 30,
        0b1100000000000000000011 => (x & 0x3ff) << 10 | (x & 0xffc00) << 30,
        0b1100000000000000000010 => x & 0xfffff | (x & 0x3ff00000) << 20,
        0b1000000000010000000011 => (x & 0x3ff) << 20 | (x & 0xffc00) << 30,
        0b1000000000010000000010 => x & 0x3ff | (x & 0xffc00) << 10 | (x & 0x3ff00000) << 20,
        0b1000000000000000000011 => (x & 0xfffff) << 10 | (x & 0x3ff00000) << 20,
        0b1000000000000000000010 => x & 0x3fffffff | (x & 0xffc0000000) << 10,
        0b1100000000010000000001 => (x & 0xfffff) << 30,
        0b1100000000010000000000 => x & 0x3ff | (x & 0x3ffffc00) << 20,
        0b1100000000000000000001 => (x & 0x3ff) << 10 | (x & 0x3ffffc00) << 20,
        0b1100000000000000000000 => x & 0xfffff | (x & 0xfffff00000) << 10,
        0b1000000000010000000001 => (x & 0x3fffffff) << 20,
        0b1000000000010000000000 => x & 0x3ff | (x & 0xfffffffc00) << 10,
        0b1000000000000000000001 => (x & 0xffffffffff) << 10,
        0b1000000000000000000000 => x & 0x3ffffffffffff,
        0b0100000000110000000011 => (x & 0x3ff) << 50,
        0b0100000000110000000010 => x & 0x3ff | (x & 0xffc00) << 40,
        0b0100000000100000000011 => (x & 0x3ff) << 10 | (x & 0xffc00) << 40,
        0b0100000000100000000010 => x & 0xfffff | (x & 0x3ff00000) << 30,
        0b0000000000110000000011 => (x & 0x3ff) << 20 | (x & 0xffc00) << 40,
        0b0000000000110000000010 => x & 0x3ff | (x & 0xffc00) << 10 | (x & 0x3ff00000) << 30,
        0b0000000000100000000011 => (x & 0xfffff) << 10 | (x & 0x3ff00000) << 30,
        0b0000000000100000000010 => x & 0x3fffffff | (x & 0xffc0000000) << 20,
        0b0100000000110000000001 => (x & 0x3ff) << 30 | (x & 0xffc00) << 40,
        0b0100000000110000000000 => x & 0x3ff | (x & 0xffc00) << 20 | (x & 0x3ff00000) << 30,
        0b0100000000100000000001 => {
            (x & 0x3ff) << 10 | (x & 0xffc00) << 20 | (x & 0x3ff00000) << 30
        }
        0b0100000000100000000000 => x & 0xfffff | (x & 0x3ff00000) << 10 | (x & 0xffc0000000) << 20,
        0b0000000000110000000001 => (x & 0xfffff) << 20 | (x & 0x3ff00000) << 30,
        0b0000000000110000000000 => x & 0x3ff | (x & 0x3ffffc00) << 10 | (x & 0xffc0000000) << 20,
        0b0000000000100000000001 => (x & 0x3fffffff) << 10 | (x & 0xffc0000000) << 20,
        0b0000000000100000000000 => x & 0xffffffffff | (x & 0x3ff0000000000) << 10,
        0b0100000000010000000011 => (x & 0xfffff) << 40,
        0b0100000000010000000010 => x & 0x3ff | (x & 0x3ffffc00) << 30,
        0b0100000000000000000011 => (x & 0x3ff) << 10 | (x & 0x3ffffc00) << 30,
        0b0100000000000000000010 => x & 0xfffff | (x & 0xfffff00000) << 20,
        0b0000000000010000000011 => (x & 0x3ff) << 20 | (x & 0x3ffffc00) << 30,
        0b0000000000010000000010 => x & 0x3ff | (x & 0xffc00) << 10 | (x & 0xfffff00000) << 20,
        0b0000000000000000000011 => (x & 0xfffff) << 10 | (x & 0xfffff00000) << 20,
        0b0000000000000000000010 => x & 0x3fffffff | (x & 0x3ffffc0000000) << 10,
        0b0100000000010000000001 => (x & 0x3fffffff) << 30,
        0b0100000000010000000000 => x & 0x3ff | (x & 0xfffffffc00) << 20,
        0b0100000000000000000001 => (x & 0x3ff) << 10 | (x & 0xfffffffc00) << 20,
        0b0100000000000000000000 => x & 0xfffff | (x & 0x3fffffff00000) << 10,
        0b0000000000010000000001 => (x & 0xffffffffff) << 20,
        0b0000000000010000000000 => x & 0x3ff | (x & 0x3fffffffffc00) << 10,
        0b0000000000000000000001 => (x & 0x3ffffffffffff) << 10,
        0b0000000000000000000000 => x & 0xfffffffffffffff,
        _ => unreachable!(),
    }
}
